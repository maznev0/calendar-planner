import {
  Alert,
  Keyboard,
  ScrollView,
  StyleSheet,
  TouchableWithoutFeedback,
  View,
} from "react-native";
import React, { useState } from "react";
import Header from "../../../../../../components/Header";
import Input from "../../../../../../components/Input";
import SelectInput from "../../../../../../components/SelectInput";
import InputArea from "../../../../../../components/InputArea";
import Button from "../../../../../../components/Button";
import axios from "axios";

const Add = () => {
  const [order, setOrder] = useState({
    order_address: "",
    phone_number: "+375",
    meters: "",
    price: "",
    // worker: "",
    driver_id: "a7d1027a-cb57-4e79-b80f-12f90e78a96d",
    note: "",
    order_state: "",
  });

  const handleChangeText = (field: string, value: string) => {
    setOrder({ ...order, [field]: value });
  };

  // const handleSubmit = () => {
  //   axios.post('')
  // };
  const handleSubmit = async () => {
    // if (!o || !body || !userId) {
    //   Alert.alert("–û—à–∏–±–∫–∞", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è");
    //   return;
    // }

    // setLoading(true);
    // setError(null);

    try {
      const response = await axios.post(
        "http://100.78.78.230:10000/orders",
        {
          order: {
            ...order,
            price: Number(order.price),
            meters: parseFloat(order.meters),
            order_date: new Date().toISOString().split("T")[0],
          },
          workers: [
            {
              worker_id: "58749034-f09e-48d2-b82e-424d1d31af0b",
              worker_payment: 0,
            },
          ],
        },
        {
          headers: {
            "Content-Type": "application/json",
            Accept: "application/json",
          },
        }
      );

      console.log("–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response.data);

      Alert.alert("–£—Å–ø–µ—Ö", "–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!");
    } catch (err: any) {
      Alert.alert("–û—à–∏–±–∫–∞", err.message);
    }
  };
  return (
    <TouchableWithoutFeedback
      onPress={() => {
        Keyboard.dismiss();
      }}
      accessible={false}
    >
      <View style={styles.container}>
        <Header>–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ 27 —è–Ω–≤–∞—Ä—è</Header>
        <ScrollView
          keyboardDismissMode="on-drag"
          keyboardShouldPersistTaps="handled"
          nestedScrollEnabled={true}
          showsVerticalScrollIndicator={false}
          contentContainerStyle={{ flexGrow: 1 }}
        >
          <View style={styles.list}>
            <Input
              placeholder="–ü–ª–æ—â–∞–¥—å"
              name="–ú¬≤"
              type="numbers-and-punctuation"
              value={order.meters}
              onChangeText={(e) => handleChangeText("meters", e)}
            />
            <Input
              placeholder="–¶–µ–Ω–∞ –∑–∞ –∫–≤–∞–¥—Ä–∞—Ç"
              name="BYN"
              type="numeric"
              value={order.price}
              onChangeText={(e) => handleChangeText("price", e)}
            />
            <Input
              placeholder="–ê–¥—Ä–µ—Å"
              name="üìç"
              value={order.order_address}
              onChangeText={(e) => handleChangeText("order_address", e)}
            />
            <Input
              placeholder="+375"
              name=""
              type="phone-pad"
              value={order.phone_number}
              onChangeText={(e) => handleChangeText("phone_number", e)}
            />
            {/* <SelectInput
              name="üë∑‚Äç‚ôÇÔ∏è"
              placeholder="–†–∞–±–æ—á–∏–π"
              value={order.worker}
              onChange={(value) => handleChangeText("worker", value)}
            /> */}
            {/* <SelectInput
              name=""
              placeholder="–í–æ–¥–∏—Ç–µ–ª—å"
              value={order.driver}
              onChange={(value) => handleChangeText("driver", value)}
            /> */}
            <InputArea
              name="üìå"
              placeholder="–ü—Ä–∏–º–µ—á–∞–Ω–∏—è"
              value={order.note}
              onChangeText={(e) => handleChangeText("note", e)}
            />
            <View
              style={{
                minHeight: 300,
                flexGrow: 1,
                width: "100%",
                // borderWidth: 1,
                // borderColor: "#fff",
              }}
            />
          </View>
        </ScrollView>
        <Button onPress={handleSubmit}>–î–æ–±–∞–≤–∏—Ç—å</Button>
      </View>
    </TouchableWithoutFeedback>
  );
};

export default Add;

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#3C3C3C",
    paddingHorizontal: 20,
    paddingBottom: 20,
  },
  key: {
    flex: 1,
  },
  scroll: {
    // borderWidth: 2,
    // borderColor: "#1c1c1c1",
  },
  list: {
    marginVertical: 10,
    flexDirection: "column",
    gap: 14,
  },
});
